#!/bin/bash
shopt -s lastpipe; set +m;

# First argument will be the commit or message file
# Second argument wheter it is a normal message or a merge message.

file=$1
git rev-parse --show-toplevel | read base
git rev-parse --abbrev-ref HEAD 2> /dev/null | read current_branch

# Checkout if branch name is in the format <string>-<number>
[[ $current_branch =~ feature/(.*) ]] && branch_name=${BASH_REMATCH[0]}

# If it is, add [<string>-<number>] to the specified file
[[ $branch_name ]] && echo -e "feat: [$branch_name] $(cat $file)\n\n[$branch_name] #comment $(cat $file)" > $file

# If we're working on a feature, save it so when we make git flow feature finish we can tell where we come from.
[[ $current_branch =~ feature.* ]] && echo $branch_name > .git/LAST_FEATURE

# Upon making git flow feature finish, replace commit message with an auto-changelog compatible message
[[ $2 == "merge" ]] && [[ $current_branch != "master" ]] && {
    [[ -e $base/.git/LAST_FEATURE ]] && {
        # It seems like auto keep a changelog does not support merge messages...
        # echo "feat: $(cat $base/.git/LAST_FEATURE) #close "  > $file
        echo
    } || {
        echo "chore: Finished release $(cat .git/LAST_VERSION)" > $file
        rm .git/LAST_VERSION
    }
}

exit 0
